{"version":3,"sources":["../src/app.js"],"names":["Promise","global","app","env","process","NODE_ENV","connect","MONGO_URL","use","initialize","session","urlencoded","extended","json","req","res","next","header","method","status","isAuthenticated","console","log","message","apiRouter","get","error","Error","err"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAEA;;;;AACA;;;;;;AAEA,mBAASA,OAAT,GAAmBC,OAAOD,OAA1B;;AAEA,IAAME,MAAM,wBAAZ;AACA,IAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AAEA,IAAIF,QAAQ,aAAZ,EAA2B;AACzB,qBAASG,OAAT,CAAiB,gCAAjB;AACD,CAFD,MAEO,IAAIH,QAAQ,YAAZ,EAA0B;AAC/B,qBAASG,OAAT,CAAiBF,QAAQD,GAAR,CAAYI,SAA7B;AACD;;AAEDL,IAAIM,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACA;AACA;AACA;;AAEA;AACAN,IAAIM,GAAJ,CAAQ,mBAASC,UAAT,EAAR;AACAP,IAAIM,GAAJ,CAAQ,mBAASE,OAAT,EAAR;;AAEAR,IAAIM,GAAJ,CAAQ,qBAAWG,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAV,IAAIM,GAAJ,CAAQ,qBAAWK,IAAX,EAAR;;AAEAX,IAAIM,GAAJ,CAAQ,UAACM,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,+DAA3C;;AAEA,MAAIH,IAAII,MAAJ,KAAe,SAAnB,EAA8B;AAC5BH,QAAIE,MAAJ,CAAW,8BAAX,EAA2C,KAA3C,EAAkD,MAAlD,EAA0D,OAA1D,EAAmE,QAAnE,EAA6E,KAA7E;;AAEA,WAAOF,IAAII,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAArB,CAAP;AACD;;AAEDG;AACD,CAXD;;AAaA,IAAMI,kBAAkB,SAAlBA,eAAkB,CAACN,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1C,MAAIF,IAAIM,eAAJ,EAAJ,EAA2B;AACzBC,YAAQC,GAAR,CAAY,eAAZ;AACAN;AACD,GAHD,MAGO;AACLK,YAAQC,GAAR,CAAY,iBAAZ;AACAP,QAAII,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AACnBU,eAAS;AADU,KAArB;AAGD;AACF,CAVD;;AAYA,IAAMC,YAAY,sBAAlB;AACAA,UAAUhB,GAAV,CAAc,QAAd;AACA;AACAN,IAAIM,GAAJ,CAAQ,SAAR,EAAmBgB,SAAnB;;AAEAtB,IAAIuB,GAAJ,CAAQ,GAAR,EAAa,UAACX,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC/BD,MAAII,MAAJ,CAAW,GAAX;AACD,CAFD;;AAIAjB,IAAIuB,GAAJ,CAAQ,cAAR,EAAwB,UAACX,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1CD,MAAII,MAAJ,CAAW,GAAX;AACD,CAFD;;AAIAjB,IAAIM,GAAJ,CAAQ,UAACM,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAMU,QAAQ,IAAIC,KAAJ,CAAU,WAAV,CAAd;AACAD,QAAMP,MAAN,GAAe,GAAf;AACAH,OAAKU,KAAL;AACD,CAJD;;AAMAxB,IAAIM,GAAJ,CAAQ,UAACoB,GAAD,EAAMd,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/BD,MAAII,MAAJ,CAAWS,IAAIT,MAAJ,IAAc,GAAzB;AACAJ,MAAIF,IAAJ,CAAS;AACPa,WAAO;AACLH,eAASK,IAAIL;AADR;AADA,GAAT;AAKD,CAPD;;kBASerB,G","file":"app.js","sourcesContent":["import express, { Router } from 'express';\r\nimport path from 'path';\r\nimport morgan from 'morgan';\r\nimport bodyParser from 'body-parser';\r\nimport mongoose from 'mongoose';\r\nimport cookieSession from 'cookie-session';\r\nimport passport from 'passport';\r\nimport {} from 'dotenv/config';\r\n\r\nimport noteRoutes from './api/routes/notes';\r\nimport userRoutes from './api/routes/users';\r\n\r\nmongoose.Promise = global.Promise;\r\n\r\nconst app = express();\r\nconst env = process.env.NODE_ENV || 'development';\r\n\r\nif (env === 'development') {\r\n  mongoose.connect('mongodb://localhost/thesis-pwa');\r\n} else if (env === 'production') {\r\n  mongoose.connect(process.env.MONGO_URL);\r\n}\r\n\r\napp.use(morgan('dev'));\r\n\r\n// app.use(cookieSession({\r\n//   maxAge: 24 * 60 * 60 * 1000,\r\n//   keys: ['Ssiioonngg0527__']\r\n// }));\r\n\r\n// initialize passport\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\n\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(bodyParser.json());\r\n\r\napp.use((req, res, next) => {\r\n  res.header('Access-Control-Allow-Origin', '*');\r\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');\r\n\r\n  if (req.method === 'OPTIONS') {\r\n    res.header('Access-Control-Allow-Methods', 'PUT', 'POST', 'PATCH', 'DELETE', 'GET');\r\n  \r\n    return res.status(200).json({});\r\n  }\r\n\r\n  next();\r\n});\r\n\r\nconst isAuthenticated = (req, res, next) => {\r\n  if (req.isAuthenticated()) {\r\n    console.log('authenticated');\r\n    next();\r\n  } else {\r\n    console.log('unauthenticated');\r\n    res.status(401).json({\r\n      message: 'UNAUTHORIZED'\r\n    });\r\n  }\r\n};\r\n\r\nconst apiRouter = Router();\r\napiRouter.use('/notes', noteRoutes);\r\n// apiRouter.use('/users', userRoutes);\r\napp.use('/api/v1', apiRouter);\r\n\r\napp.get('/', (req, res, next) => {\r\n  res.status(204);\r\n})\r\n\r\napp.get('/favicon.ico', (req, res, next) => {\r\n  res.status(204);\r\n});\r\n\r\napp.use((req, res, next) => {\r\n  const error = new Error('Not found');\r\n  error.status = 404;\r\n  next(error);\r\n});\r\n\r\napp.use((err, req, res, next) => {\r\n  res.status(err.status || 500);\r\n  res.json({\r\n    error: {\r\n      message: err.message\r\n    }\r\n  });\r\n});\r\n\r\nexport default app;"]}